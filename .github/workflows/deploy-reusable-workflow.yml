name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  terraform-check:
    name: Terraform check on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: terraform-lint
      uses: ./.github/actions/terraform-check-fmt-lint
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: terraform-plan
      uses: ./.github/actions/terraform-plan
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
      #TODO Save Terraform plan file and metadata

  terraform-approve:
    name: Terraform approve on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [terraform-check]
    environment: manual-approve-${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Approved
      run: echo "Approved"

  terraform-apply:
    name: Terraform apply on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [terraform-approve]
    environment: ${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    #TODO Restore Terraform plan file and metadata
    - name: terraform-apply
      uses: ./.github/actions/terraform-apply
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

  helm-check:
    name: Helm check on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [terraform-apply]
    environment: ${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: validate-helm-charts
      uses: ./.github/actions/validate-helm-charts
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: dryrun-k8s-services
      uses: ./.github/actions/dryrun-k8s-services
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

  helm-approve:
    name: Helm approve on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [helm-check]
    environment: manual-approve-${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Approved
      run: echo "Approved"

  helm-deploy:
    name: Helm deploy on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [helm-approve]
    environment: dev
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: deploy-k8s-services
      uses: ./.github/actions/deploy-k8s-services
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

  commit-deployment:
    name: Commit deployment on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [helm-deploy]
    environment: ${{ inputs.environment }}
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: commit-deployment
      uses: ./.github/actions/commit-deployment
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

