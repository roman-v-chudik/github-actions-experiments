name: Deploy from feature branch

on:
  push:
    branches:
      - 'feature/*'

jobs:
  deploy-on-dev:
    name: Deploy on dev
    uses: ./.github/workflows/deploy-reusable-workflow.yml
    environment: dev
    with:
      aws-region: ${{ vars.AWS_REGION }}
      environment: ${{ vars.STAGE }}
      aws-aim-role-arn: ${{ vars.AWS_IAM_ROLE_ARN }}

  check-on-test:
    name: Check on test
    runs-on: ubuntu-latest
    environment: test
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: terraform-plan
      uses: ./.github/actions/terraform-plan
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: validate-helm-charts
      uses: ./.github/actions/validate-helm-charts
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: dryrun-k8s-services
      uses: ./.github/actions/dryrun-k8s-services
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

  check-on-prod:
    name: Check on prod
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 45
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: terraform-plan
      uses: ./.github/actions/terraform-plan
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: validate-helm-charts
      uses: ./.github/actions/validate-helm-charts
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}
    - name: dryrun-k8s-services
      uses: ./.github/actions/dryrun-k8s-services
      with:
        AWS_REGION: ${{ vars.AWS_REGION }}
        ENVIRONMENT: ${{ vars.STAGE }}
        AWS_IAM_ROLE_ARN: ${{ vars.AWS_IAM_ROLE_ARN }}

